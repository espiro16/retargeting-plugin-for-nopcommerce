@using Nop.Plugin.Widgets.Retargeting.Models
@model Nop.Plugin.Widgets.Retargeting.Models.PublicInfoModel
@{
    Layout = "";
}

<script>
    var add_to_cart_button_id = "";
    var price_label_id = "";
    @if (Model.ProductId > 0)
    {
        <text>
    add_to_cart_button_id = "@Model.AddToCartButtonIdDetailsPrefix" + "@Model.ProductId";
    price_label_id = "@Model.ProductPriceLabelDetailsSelector";
    </text>
    }

    (function () {
        ra_key = "@Model.TrackingApiKey";
        ra_params = {
            add_to_cart_button_id: add_to_cart_button_id,
            price_label_id: price_label_id
        };
        var ra = document.createElement("script");
        ra.type = "text/javascript";
        ra.async = true;
        ra.src = ("https:" == document.location.protocol ? "https://" : "http://") + "tracking.retargeting.biz/v3/rajs/" + ra_key + ".js";
        var s = document.getElementsByTagName("script")[0];
        s.parentNode.insertBefore(ra, s);
    })();

    var addToCartInfo = {};
    var addToWishlistInfo = {};

    var _ra = _ra || {};

    $(document).ready(function () {
        //user data (login, register)
        @if (Model.RenderSetEmailFunc)
        {
            <text>
                setUserData("@Model.CustomerModel.Email", "@Model.CustomerModel.Name", "@Model.CustomerModel.Phone");
            </text>
        }

        //category
        @if (Model.RenderSendCategoryFunc)
        {
            <text>
        var parentCategoryId = false;
        var breadcrumb1;
        var breadcrumb2;

        //breabcrumb 1st level
        if ("@Model.CategoryModel.ParentCategoryId" > 0) {
            breadcrumb1 = {};
            parentCategoryId = "@Model.CategoryModel.ParentCategoryId";
            breadcrumb1 = {
                "id": parentCategoryId,
                "name": "@Model.CategoryModel.ParentCategoryName",
                "parent": "@Model.CategoryModel.ParentParentCategoryId"
            }
        }

        //breabcrumb 2nd level
        if ("@Model.CategoryModel.ParentParentCategoryId" > 0) {
            breadcrumb2 = {};
            breadcrumb2 =
            {
                "id": "@Model.CategoryModel.ParentParentCategoryId",
                "name": "@Model.CategoryModel.ParentParentCategoryName",
                "parent": false
            }
        }

        //send category script
        sendCategoryInfo("@Model.CategoryModel.CategoryId", "@Model.CategoryModel.CategoryName",
            parentCategoryId, breadcrumb1, breadcrumb2);
        </text>
        }

        //manufacturer
        @if (Model.RenderSendBrandFunc)
        {
            <text>
                sendBrandInfo("@Model.ManufacturerModel.ManufacturerId", "@Model.ManufacturerModel.ManufacturerName");
            </text>
        }

        //product
        @if (Model.RenderSendProductFunc)
        {
            <text>
                var productId = "@Model.ProductId";
                //get product info
                $.ajax({
                    cache: false,
                    url: "/WidgetsRetargeting/GetProductInfo?productId=" + productId,
                    type: "post",
                    success: function (data) {
                        if (data.result) {
                            //send product
                            sendProduct(data.result);

                            //set variation event
                            $("select[name^=product_attribute_]").on("change", function () {
                                setVariation(this);
                            });
                            $("[name^=product_attribute_][type=radio]").on("change", function () {
                                setVariation(this);
                            });
                            $("[name^=product_attribute_][type=checkbox]").on("change", function () {
                                setVariation(this);
                            });
                        }
                    }
                });

        </text>
        }

        //add to cart
        @if (Model.RenderAddToCartFunc)
        {
            <text>
            //add to cart (product details page)
            var addToCartDetailsButtons = $("[id^=" + "@Model.AddToCartButtonIdDetailsPrefix" + "]");
            addToCartDetailsButtons.each(function (index) {
                $(addToCartDetailsButtons[index]).on("click", function (e) {
                    addToCartInfo.productDetailsPage = true;
                    addToCartInfo.productId = $(addToCartDetailsButtons[index]).attr("id").replace("@Model.AddToCartButtonIdDetailsPrefix", "");
                    addToCartInfo.productQty = $("[name=\"addtocart_" + addToCartInfo.productId + ".EnteredQuantity\"]").val();
                    addToCartInfo.productVariation = GetSelectedProductVariation(addToCartInfo.productId, "#product-details-form");
                });
            });

            //add to cart (product box)
            var addToCartProductBoxButtons = $("@Model.AddToCartCatalogButtonSelector");
            addToCartProductBoxButtons.each(function (index) {
                $(addToCartProductBoxButtons[index]).on("click", function (e) {
                    addToCartInfo.productDetailsPage = false;
                    addToCartInfo.productId = $(addToCartProductBoxButtons[index]).closest("[data-productid]").attr("data-productid");
                    addToCartInfo.productQty = 1;
                    addToCartInfo.productVariation = false;
                });
            });

            //remove from cart
            var updatecartButton = $("[name=updatecart]");
            var currentItemQtys = [];
            $("[name^=itemquantity]").each(function (index) {
                currentItemQtys.push({
                    itemId: $("[name^=itemquantity]")[index].name.replace("itemquantity", ""),
                    itemQty: $("[name^=itemquantity]")[index].value
                });
            });

            if (updatecartButton) {
                $(updatecartButton).on("click", function (e) {
                    var removefromcart = $("[name=removefromcart]:checked");

                    $.each(currentItemQtys, function (index, element) {
                        var newQty = $("[name^=itemquantity" + element.itemId + "]").val();
                        removefromcart.each(function (i) {
                            if (element.itemId == removefromcart[i].value) {
                                newQty = 0;
                                return;
                            }
                        });

                        if (newQty <= 0) {
                            $.ajax({
                                cache: false,
                                async: false,
                                url: "/WidgetsRetargeting/GetProductIdBySciId?sciId=" + element.itemId,
                                type: "post",
                                success: function (data) {
                                    if (data.productId && data.productId > 0) {
                                        removeFromCart(data.productId, element.itemQty, false);
                                    }
                                }
                            });
                        }
                    });
                });
            }
        </text>
        }

        //add to wishlist
        @if (Model.RenderAddToWishlistFunc)
        {
            <text>
        //add to wishlist (product details page)
        var addToWishlistDetailsButtons = $("[id^=" + "@Model.AddToWishlistButtonIdDetailsPrefix" + "]");
        addToWishlistDetailsButtons.each(function (index) {
            $(addToWishlistDetailsButtons[index]).on("click", function (e) {
                addToWishlistInfo.productDetailsPage = true;
                addToWishlistInfo.productId = $(addToWishlistDetailsButtons[index]).attr("id").replace("@Model.AddToWishlistButtonIdDetailsPrefix", "");
            });
        });

        //add to wishlist (product box)
        var addToWishlistProductBoxButtons = $("@Model.ProductBoxSelector" + " "
                                                + "@Model.AddToWishlistCatalogButtonSelector");
        addToWishlistProductBoxButtons.each(function (index) {
            $(addToWishlistProductBoxButtons[index]).on("click", function (e) {
                addToWishlistInfo.productDetailsPage = false;
                addToWishlistInfo.productId = $(addToWishlistProductBoxButtons[index]).closest("[data-productid").attr("data-productid");
            });
        });
        </text>
        }

        //click product image
        @if (Model.RenderClickImageFunc)
        {
            <text>
        var productMainPicture = $("[id^=" + "@Model.ProductMainPictureIdDetailsPrefix" + "]");
        $(productMainPicture[0]).on("click", function (e) {
            var productId = $(this).attr("id").replace("@Model.ProductMainPictureIdDetailsPrefix", "");
            clickImage(productId);
        });
        </text>
        }

        //add product review
        @if (Model.RenderCommentOnProductFunc)
        {
            <text>
        var resultBlock = $("@Model.ProductReviewAddedResultSelector");
        if (resultBlock.length > 0) {
            var productId = "@Model.ProductId";
            commentOnProduct(productId);
        }
        </text>
        }

        //send order
        @if (Model.RenderSendOrderFunc)
        {
            <text>
        var saveOrderProducts = [];

        var saveOrderInfo = {
            "order_no": "@Model.OrderModel.Id",
            "lastname": "@Model.OrderModel.LastName",
            "firstname": "@Model.OrderModel.FirstName",
            "email": "@Model.OrderModel.Email",
            "phone": "@Model.OrderModel.Phone",
            "state": "@Model.OrderModel.State",
            "city": "@Model.OrderModel.City",
            "address": "@Model.OrderModel.Address",
            "birthday": "@Model.OrderModel.Birthday",
            "discount_code": "@Model.OrderModel.DiscountCode",
            "discount": "@Model.OrderModel.Discount",
            "shipping": "@Model.OrderModel.Shipping",
            "rebates": "@Model.OrderModel.Rebates",
            "fees": "@Model.OrderModel.Fees",
            "total": "@Model.OrderModel.Total"
        };
        </text>

            foreach (var orderItem in Model.OrderModel.OrderItems)
            {
                <text>
        saveOrderProducts.push({
            "id": "@orderItem.Id",
            "quantity": "@orderItem.Quantity",
            "price": "@orderItem.Price",
            "variation_code": "@orderItem.VariationCode",
        });
        </text>
            }

            <text>
        saveOrder(saveOrderInfo, saveOrderProducts);
        </text>
        }

        //help page
        @if (Model.RenderVisitHelpPageFunc)
        {
            <text>
        visitHelpPage();
        </text>
        }

        //send cart item ids
        @if (Model.RenderCheckoutIdsFunc)
        {
            <text>
        var ids = "@Model.CartItemIds".split(",").filter(function (el) { return el.length !== 0 });
        checkoutIds(ids);
        </text>
        }
    });

    function saveOrder(saveOrderInfo, saveOrderProducts) {
        _ra.saveOrderInfo = saveOrderInfo;
        _ra.saveOrderProducts = saveOrderProducts;

        if (_ra.ready !== undefined) {
            _ra.saveOrder(_ra.saveOrderInfo, _ra.saveOrderProducts);
        }
    }

    function addToCart(productId, productQty, variation) {
        if (_ra.ready !== undefined) {
            _ra.addToCart(productId, productQty, variation);
        }
    }

    function removeFromCart(productId, productQty, variation) {
        if (_ra.ready !== undefined) {
            _ra.removeFromCart(
                productId,
                productQty,
                variation
            );
        }
    }

    function addToWishlist(productId) {
        if (_ra.ready !== undefined) {
            _ra.addToWishlist(productId);
        }
    }

    function sendProduct(productInfo) {
        _ra.sendProductInfo = {
            "id": productInfo.id,
            "name": productInfo.name,
            "url": productInfo.url,
            "img": productInfo.img,
            "price": productInfo.price,
            "promo": productInfo.promo,
            "brand": productInfo.brand,
            "category": productInfo.category,
            inventory: productInfo.inventory
        };

        if (_ra.ready !== undefined) {
            _ra.sendProduct(_ra.sendProductInfo);
        }
    }

    function setUserData(email, name, phone) {
        if (email && email.length > 0) {
            _ra.setEmailInfo = {
                "email": email,
                "name": name,
                "phone": phone
            };

            if (_ra.ready !== undefined) {
                _ra.setEmail(_ra.setEmailInfo);
            }
        }
    }

    function sendCategoryInfo(categoryId, categoryName, parentCategoryId, breadcrumb1, breadcrumb2) {
        var breadcrumb = [];
        if (breadcrumb1) {
            breadcrumb.push(breadcrumb1);
        }
        if (breadcrumb2) {
            breadcrumb.push(breadcrumb2);
        }

        _ra.sendCategoryInfo = {
            "id": categoryId,
            "name": categoryName,
            "parent": parentCategoryId,
            "breadcrumb": breadcrumb
        }

        if (_ra.ready !== undefined) {
            _ra.sendCategory(_ra.sendCategoryInfo);
        }
    }

    function sendBrandInfo(manufacturerId, manufacturerName) {
        _ra.sendBrandInfo = {
            "id": manufacturerId,
            "name": manufacturerName
        };

        if (_ra.ready !== undefined) {
            _ra.sendBrand(_ra.sendBrandInfo);
        }
    }

    function clickImage(productId) {
        if (_ra.ready !== undefined) {
            _ra.clickImage(productId);
        }
    }

    function commentOnProduct(productId) {
        _ra.commentOnProductInfo = {
            "product_id": productId
        };

        if (_ra.ready !== undefined) {
            _ra.commentOnProduct(_ra.commentOnProductInfo.product_id);
        }
    }

    function visitHelpPage() {
        _ra.visitHelpPageInfo = {
            "visit": true
        }

        if (_ra.ready !== undefined) {
            _ra.visitHelpPage();
        }
    }

    function checkoutIds(ids) {
        _ra.checkoutIdsInfo = ids;

        if (_ra.ready !== undefined) {
            _ra.checkoutIds(_ra.checkoutIdsInfo);
        }
    }

    function setVariation(attrInput) {
        var productId = $(attrInput).closest("[data-productid]").attr("data-productid");
        var variation = GetSelectedProductVariation(productId, "#product-details-form");

        if (_ra.ready !== undefined) {
            _ra.setVariation(productId, variation);
        }
    }

    function GetSelectedProductVariation(productId, formId) {
        var varCode = "";
        var varOptions = [];

        //attrubute type "select"
        var attrsOptions = $("[data-productid=" + productId + "] select[name^=product_attribute_] option:selected");
        for (var i = 0; i < attrsOptions.length; i++) {
            var attr = $(attrsOptions[i]);
            var attrId = $(attr.closest("select")).attr("name").replace("product_attribute_", "");
            var attrName = $("[data-productid=" + productId + "] [id^=product_attribute_label_" + attrId + "] .text-prompt").text().trim();
            var attrValue = attr.val();
            var attrTextValue = attr.text().trim();

            if (attrValue) {
                //var code
                varCode += attrValue;
                varCode += "-";

                //option info
                varOptions[attrValue] = {
                    "category_name": attrName,
                    "category": attrId,
                    "value": attrTextValue
                };
            }
        }

        //attribute type "input" which could be checked
        var attrsChecked = $("[data-productid=" + productId + "] [name^=product_attribute_]:checked");
        for (var i = 0; i < attrsChecked.length; i++) {
            var attr = $(attrsChecked[i]);

            var attrId = attr.attr("name").replace("product_attribute_", "");
            var attrName = $("[data-productid=" + productId + "] [id^=product_attribute_label_" + attrId + "] .text-prompt").text().trim();
            var attrValue = attr.val();
            var attrTextValue = "";

            if (attr.prev().hasClass("color-container")) {
                if (attr.prev().attr("title")) {
                    attrTextValue = attr.prev().attr("title");
                } else {
                    if ($(".tooltip-header", $(attr.prev().closest("label")).next())) {
                        attrTextValue = $(".tooltip-header", $(attr.prev().closest("label")).next()).text().trim();
                    }
                }
            } else {
                attrTextValue = $("[data-productid=" + productId + "] label[for=" + attr.attr("id") + "]").text().trim();
            }

            if (attrValue) {
                //var code
                varCode += attrValue;
                varCode += "-";

                //option info
                varOptions[attrValue] = {
                    "category_name": attrName,
                    "category": attrId,
                    "value": attrTextValue
                };
            }
        }

        //remove the last "-"
        varCode = varCode.slice(0, -1);

        //remove undefined items
        $.grep(varOptions, function (n, i) {
            return (n !== undefined);
        });

        var stock = true;
        $.ajax({
            cache: false,
            async: false,
            url: "/WidgetsRetargeting/IsProductCombinationInStock?productId=" + productId,
            data: $(formId).serialize(),
            type: "post",
            success: function (data) {
                if (data.productIsInStock) {
                    stock = data.productIsInStock;
                }
            }
        });

        var productVariation = false;
        if (varOptions.length > 0)
            productVariation = {
                "code": varCode,
                "stock": stock,
                "details": varOptions
            };

        return productVariation;
    }

    //override default method
    AjaxCart.success_process = function (response) {
        if (response.updatetopcartsectionhtml) {
            $(AjaxCart.topcartselector).html(response.updatetopcartsectionhtml);
        }
        if (response.updatetopwishlistsectionhtml) {
            $(AjaxCart.topwishlistselector).html(response.updatetopwishlistsectionhtml);

            if (addToWishlistInfo.productId) {
                if (addToWishlistInfo.productDetailsPage) {
                    //add to wishlist
                    addToWishlist(addToWishlistInfo.productId);
                } else {
                    //get product info
                    $.ajax({
                        cache: false,
                        url: "/WidgetsRetargeting/GetProductInfo?productId=" + addToWishlistInfo.productId,
                        type: "post",
                        success: function (data) {
                            if (data.result) {
                                //send product
                                sendProduct(data.result);
                                //add to wishlist
                                addToWishlist(addToWishlistInfo.productId);
                            }
                        }
                    });
                }
            }
        }
        if (response.updateflyoutcartsectionhtml) {
            $(AjaxCart.flyoutcartselector).replaceWith(response.updateflyoutcartsectionhtml);

            if (addToCartInfo.productId) {
                if (addToCartInfo.productDetailsPage) {
                    //add to cart
                    addToCart(addToCartInfo.productId, addToCartInfo.productQty, addToCartInfo.productVariation);
                } else {
                    //get product info
                    $.ajax({
                        cache: false,
                        url: "/WidgetsRetargeting/GetProductInfo?productId=" + addToCartInfo.productId,
                        type: "post",
                        success: function (data) {
                            if (data.result) {
                                //send product
                                sendProduct(data.result);
                                //add to cart
                                addToCart(addToCartInfo.productId, addToCartInfo.productQty, addToCartInfo.productVariation);
                            }
                        }
                    });
                }
            }
        }
        if (response.message) {
            //display notification
            if (response.success == true) {
                //success
                if (AjaxCart.usepopupnotifications == true) {
                    displayPopupNotification(response.message, 'success', true);
                }
                else {
                    //specify timeout for success messages
                    displayBarNotification(response.message, 'success', 3500);
                }
            }
            else {
                //error
                if (AjaxCart.usepopupnotifications == true) {
                    displayPopupNotification(response.message, 'error', true);
                }
                else {
                    //no timeout for errors
                    displayBarNotification(response.message, 'error', 0);
                }
            }
            return false;
        }
        if (response.redirect) {
            location.href = response.redirect;
            return true;
        }
        return false;
    }
</script>